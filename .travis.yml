# Travis CI (MIT License) configuration file.
# @link https://travis-ci.org/

# For use with the Media Credit WordPress plugin.
# @link https://github.com/mundschenk-at/media-credit

# Ditch sudo and use containers.
# @link http://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link http://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Cache composer stuff
cache:
    directories:
        - $HOME/.composer/cache

# Declare versions of PHP to use. Use one decimal max.
# @link http://docs.travis-ci.com/user/build-configuration/
matrix:
    fast_finish: true

    include:
        # Current $required_php_version for WordPress: 5.2.4
        # aliased to 5.2.17
        - php:  '5.2'
          dist: precise
          env:  SCOPE=php52
        # minimum version for activating wp-Typography 5.6.0, aliased to a recent 5.6.x version
        - php:  '5.6'
          env:  SCOPE=none
        # aliased to a recent 7.0 version
        - php:  '7.0'
          env:  SCOPE=none
        # aliased to a recent 7.1 version
        - php: '7.1'
          env:  SCOPE=none
        # aliased to a recent 7.2 version
        - php:  '7.2'
          env:  SCOPE=phpcs

# Use this to prepare the system to install prerequisites or dependencies.
# e.g. sudo apt-get update.
# Failures in this section will result in build status 'errored'.
before_install:
    - if [[ "$SCOPE" == "tests" || "$SCOPE" == "coverage" || "$SCOPE" == "phpcs" ]]; then
            composer install --no-interaction --dev;
            phpenv rehash;
      fi
    - if [[ "$SCOPE" == "coverage" ]]; then composer require php-coveralls/php-coveralls --dev; fi

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Search for PHP syntax errors.
    - if [[ "$SCOPE" == "php52" ]]; then
            find -L . -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l;
      else
            find -L . -not \( -path ./tests -prune \) -not \( -path ./vendor -prune \) -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l;
      fi
    # WordPress Coding Standards.
    - if [[ "$SCOPE" == "phpcs" ]]; then
            composer phpcs;
            jshint .;
            jscs .;
      fi
    # Unit tests.
    - if [[ "$SCOPE" == "tests" ]]; then composer test; fi
    # Code coverage
    - if [[ "$SCOPE" == "coverage" ]]; then
            mkdir -p build/logs;
            composer test -- --coverage-clover build/logs/clover.xml;
      fi

after_script:
    - if [[ "$SCOPE" == "coverage" ]]; then
            php vendor/bin/coveralls -v;
            wget https://scrutinizer-ci.com/ocular.phar;
            php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml;
      fi

# Receive notifications for build results.
# @link http://docs.travis-ci.com/user/notifications/#Email-notifications
notifications:
    email: false
